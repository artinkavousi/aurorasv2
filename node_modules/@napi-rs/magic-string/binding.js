const{existsSync,readFileSync}=require("fs"),{join}=require("path"),{platform,arch}=process;let nativeBinding=null,localFileExisted=!1,isMusl=!1,loadError=null;switch(platform){case"android":if(arch!=="arm64")throw new Error(`Unsupported architecture on Android ${arch}`);localFileExisted=existsSync(join(__dirname,"magic-string-rs.android-arm64.node"));try{localFileExisted?nativeBinding=require("./magic-string-rs.android-arm64.node"):nativeBinding=require("@napi-rs/magic-string-android-arm64")}catch(r){loadError=r}break;case"win32":switch(arch){case"x64":localFileExisted=existsSync(join(__dirname,"magic-string-rs.win32-x64-msvc.node"));try{localFileExisted?nativeBinding=require("./magic-string-rs.win32-x64-msvc.node"):nativeBinding=require("@napi-rs/magic-string-win32-x64-msvc")}catch(r){loadError=r}break;case"ia32":localFileExisted=existsSync(join(__dirname,"magic-string-rs.win32-ia32-msvc.node"));try{localFileExisted?nativeBinding=require("./magic-string-rs.win32-ia32-msvc.node"):nativeBinding=require("@napi-rs/magic-string-win32-ia32-msvc")}catch(r){loadError=r}break;case"arm64":localFileExisted=existsSync(join(__dirname,"magic-string-rs.win32-arm64-msvc.node"));try{localFileExisted?nativeBinding=require("./magic-string-rs.win32-arm64-msvc.node"):nativeBinding=require("@napi-rs/magic-string-win32-arm64-msvc")}catch(r){loadError=r}break;default:throw new Error(`Unsupported architecture on Windows: ${arch}`)}break;case"darwin":switch(arch){case"x64":localFileExisted=existsSync(join(__dirname,"magic-string-rs.darwin-x64.node"));try{localFileExisted?nativeBinding=require("./magic-string-rs.darwin-x64.node"):nativeBinding=require("@napi-rs/magic-string-darwin-x64")}catch(r){loadError=r}break;case"arm64":localFileExisted=existsSync(join(__dirname,"magic-string-rs.darwin-arm64.node"));try{localFileExisted?nativeBinding=require("./magic-string-rs.darwin-arm64.node"):nativeBinding=require("@napi-rs/magic-string-darwin-arm64")}catch(r){loadError=r}break;default:throw new Error(`Unsupported architecture on macOS: ${arch}`)}break;case"freebsd":if(arch!=="x64")throw new Error(`Unsupported architecture on FreeBSD: ${arch}`);localFileExisted=existsSync(join(__dirname,"magic-string-rs.freebsd-x64.node"));try{localFileExisted?nativeBinding=require("./magic-string-rs.freebsd-x64.node"):nativeBinding=require("@napi-rs/magic-string-freebsd-x64")}catch(r){loadError=r}break;case"linux":switch(arch){case"x64":if(isMusl=readFileSync("/usr/bin/ldd","utf8").includes("musl"),isMusl){localFileExisted=existsSync(join(__dirname,"magic-string-rs.linux-x64-musl.node"));try{localFileExisted?nativeBinding=require("./magic-string-rs.linux-x64-musl.node"):nativeBinding=require("@napi-rs/magic-string-linux-x64-musl")}catch(r){loadError=r}}else{localFileExisted=existsSync(join(__dirname,"magic-string-rs.linux-x64-gnu.node"));try{localFileExisted?nativeBinding=require("./magic-string-rs.linux-x64-gnu.node"):nativeBinding=require("@napi-rs/magic-string-linux-x64-gnu")}catch(r){loadError=r}}break;case"arm64":if(isMusl=readFileSync("/usr/bin/ldd","utf8").includes("musl"),isMusl){localFileExisted=existsSync(join(__dirname,"magic-string-rs.linux-arm64-musl.node"));try{localFileExisted?nativeBinding=require("./magic-string-rs.linux-arm64-musl.node"):nativeBinding=require("@napi-rs/magic-string-linux-arm64-musl")}catch(r){loadError=r}}else{localFileExisted=existsSync(join(__dirname,"magic-string-rs.linux-arm64-gnu.node"));try{localFileExisted?nativeBinding=require("./magic-string-rs.linux-arm64-gnu.node"):nativeBinding=require("@napi-rs/magic-string-linux-arm64-gnu")}catch(r){loadError=r}}break;case"arm":localFileExisted=existsSync(join(__dirname,"magic-string-rs.linux-arm-gnueabihf.node"));try{localFileExisted?nativeBinding=require("./magic-string-rs.linux-arm-gnueabihf.node"):nativeBinding=require("@napi-rs/magic-string-linux-arm-gnueabihf")}catch(r){loadError=r}break;default:throw new Error(`Unsupported architecture on Linux: ${arch}`)}break;default:throw new Error(`Unsupported OS: ${platform}, architecture: ${arch}`)}if(!nativeBinding)throw loadError||new Error("Failed to load native binding");const{MagicString}=nativeBinding;module.exports.MagicString=MagicString;
